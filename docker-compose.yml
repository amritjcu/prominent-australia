version: "3.8"

services:
    # --- Laravel Backend ---
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        ports:
            - "9000:9000"
        depends_on:
            - mysql
        environment:
            - APP_ENV=local
            - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
        user: "www-data"

    # --- MySQL Database ---
    mysql:
        image: mysql:8.0
        container_name: mysql_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: laravel
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql

    # --- Nginx Web Server ---
    nginx:
        image: nginx:latest
        container_name: nginx_server
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app

    # --- Frontend (React + InertiaJS) ---
    frontend:
        build:
            context: .
            dockerfile: Dockerfile.frontend
        container_name: react_frontend
        restart: unless-stopped
        working_dir: /app
        volumes:
            - .:/app
            - /app/node_modules
        ports:
            - "5173:5173"
        depends_on:
            - app

volumes:
    mysql_data:
